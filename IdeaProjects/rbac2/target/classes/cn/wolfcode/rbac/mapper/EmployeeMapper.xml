<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
    <mapper namespace="cn.wolfcode.rbac.mapper.EmployeeMapper">
    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="employee">
        insert into employee (name, password, email, age, admin, dept_id)
          values (#{name}, #{password}, #{email}, #{age}, #{admin}, #{dept.id})
    </insert>

    <!--//保存角色和权限的关系 employee role关系中间表-->
    <insert id="insertRelation">
        insert into employee_role (employee_id, role_id)
          values (#{employeeId}, #{roleId})
    </insert>

        <update id="updateByPrimaryKey">
        update employee set name = #{name}, email = #{email}, age = #{age},
              admin = #{admin}, dept_id = #{dept.id}
          where id = #{id}
    </update>

    <delete id="deleteByPrimarId">
        delete from employee where id = #{id}
    </delete>

    <!--删除旧的关系 employee-role多对多关系的中间表-->
    <delete id="deleteRelation">
        delete from employee_role where employee_id = #{id}
    </delete>

    <select id="getByPrimarId" resultMap="baseMap">

          <include refid="base_colunm"/>
          <include refid="base_table"/>
        where e.id = #{id}
    </select>

    <!-- 多条件查询-->
    <sql id="base_colunm">
        select
            e.id, e.name, e.email, e.age, e.admin,
            e.dept_id, d.id d_id, d.name d_name

    </sql>

    <sql id="base_table">
        from employee e left join department d on e.dept_id = d.id
    </sql>

    <sql id="base_where">
        <where>
            <if test="keyword != null">
              and ((e.name like concat('%', #{keyword}, '%')) or (e.email like concat('%', #{keyword}, '%')))
            </if>
            <if test="deptId > 0">
              and e.dept_id = #{deptId}
            </if>
        </where>
    </sql>

    <!--Map-->
    <resultMap id="baseMap" type="employee">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="email" property="email"/>
        <result column="age" property="age"/>
        <result column="admin" property="admin"/>

        <!--联合查询department对象-->
        <association property="dept" javaType="department" columnPrefix="d_">
            <id column="id" property="id"/>
            <result column="name" property="name"/>
        </association>

        <!--联合查询role对象集合-->
        <collection property="roles" column="id"
                    ofType="role"
                    select="cn.wolfcode.rbac.mapper.RoleMapper.getByEmployeeId"/>
    </resultMap>

    <!--多条件下的所有数据-->
    <select id="query" resultMap="baseMap" parameterType="cn.wolfcode.rbac.query.EmployeeQueryObject">
        <include refid="base_colunm"/>
        <include refid="base_table"/>
        <include refid="base_where"/>
        limit #{start}, #{pageSize}
    </select>

    <!--总记录数-->
    <select id="queryCount" resultType="int">
        select count(*) from employee e
        <include refid="base_where"/>
    </select>

    <!--查询数据库 登陆查询-->
    <select id="selectEmployeeByInfo" resultType="employee">
        select id, name, email, age, admin from employee
            where name = #{username} and password = #{password}
    </select>


</mapper>