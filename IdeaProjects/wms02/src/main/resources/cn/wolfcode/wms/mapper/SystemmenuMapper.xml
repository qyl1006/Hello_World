<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wolfcode.wms.mapper.SystemmenuMapper">
  <resultMap id="BaseResultMap" type="cn.wolfcode.wms.domain.Systemmenu">
    <id column="id" property="id" />
    <result column="name" property="name" />
    <result column="url" property="url" />
    <result column="sn" property="sn" />

    <association property="parent" columnPrefix="p_" javaType="systemmenu">
      <id column="id" property="id"/>
      <result column="name" property="name"/>
    </association>
  </resultMap>
  <delete id="deleteByPrimaryKey">
    delete from systemmenu
    where id = #{id}
  </delete>
  <delete id="deleteSubmenu">
    delete from systemmenu where parent_id = #{id}
  </delete>

  <insert id="insert" keyProperty="id" useGeneratedKeys="true">
    insert into systemmenu (name, url, sn, parent_id)
    values (#{name}, #{url}, #{sn}, #{parent.id})
  </insert>

  <update id="updateByPrimaryKey">
    update systemmenu
    set name = #{name},
      url = #{url},
      sn = #{sn},
      parent_id = #{parent.id}
    where id = #{id}
  </update>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap">
    select id, name, url, sn, parent_id
    from systemmenu
    where id = #{id}
  </select>

  <select id="selectAll" resultMap="BaseResultMap">
    select id, name, url, sn, parent_id
    from systemmenu  where parent_id is not null
  </select>

  <select id="selectByParent" resultMap="BaseResultMap" parameterType="cn.wolfcode.wms.query.ParentQuery">
      select child.id, child.name, child.url, child.sn,
              parent.id p_id, parent.name p_name
          from systemmenu child left join systemmenu parent on child.parent_id = parent.id

          WHERE
          <choose>
              <when test="parentId == null">child.parent_id is null</when>
              <otherwise>child.parent_id = #{parentId}</otherwise>
          </choose>
  </select>

  <select id="selectParentByKey" resultType="systemmenu">
    select id, name from systemmenu where id = #{parentId}

  </select>

  <select id="selectParents" resultMap="BaseResultMap">
    select child.id, child.name, child.url, child.sn,
    parent.id p_id, parent.name p_name
    from systemmenu child left join systemmenu parent on child.parent_id = parent.id

    WHERE child.id = #{parentId}



      <!--<choose>-->
        <!--<when test="parentId == null">child.parent_id is null</when>-->
        <!--<otherwise>child.parent_id = #{parentId}</otherwise>-->
      <!--</choose>-->
  </select>


  <select id="selectByRoleId" resultType="systemmenu">
    select id, name from systemmenu where id in(
      select menu_id from role_menu where
        role_id = #{roleId}
    )
  </select>

  <!--//根据菜单的sn获取子菜单   menuSn-->
  <select id="getMenuBySn" resultType="map">
      select child.id, child.parent_id pId, child.name, child.url action
        from systemmenu child left join systemmenu parent
          on child.parent_id = parent.id
          where parent.sn = #{menuSn}
  </select>


  <select id="getMenuBySnAndUser" resultType="map">
        select child.id, child.parent_id pId, child.name, child.url action
          from systemmenu child
          left join systemmenu parent on child.parent_id = parent.id
          join role_menu rm on rm.menu_id = child.id
          join employee_role er on er.role_id = rm.role_id
            where parent.sn = #{menuSn} and er.employee_id = #{employeeId}
  </select>
</mapper>