<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wolfcode.wms.mapper.SystemMenuMapper">
  <resultMap id="BaseResultMap" type="cn.wolfcode.wms.domain.SystemMenu">
    <id column="id" property="id" />
    <result column="name" property="name" />
    <result column="url" property="url" />
    <result column="sn" property="sn" />
    
    <association property="parent" javaType="systemMenu" columnPrefix="p_">
      <id column="id" property="id" />
      <result column="name" property="name" />
    </association>
  </resultMap>
  <delete id="deleteByPrimaryKey">
    delete from systemmenu
    where id = #{id}
  </delete>
  <delete id="deleteChildMenu">
    delete from systemMenu where parent_id = #{parentId}
  </delete>
  <insert id="insert" keyProperty="id" useGeneratedKeys="true">
    insert into systemmenu (name, url, sn, parent_id)
    values (#{name}, #{url}, #{sn}, #{parent.id})
  </insert>
  <update id="updateByPrimaryKey">
    update systemmenu
    set name = #{name},
      url = #{url},
      sn = #{sn},
      parent_id = #{parent.id}
    where id = #{id}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap">
    select child.id, child.name, child.url, child.sn,
		parent.id p_id, parent.name p_name
    from systemmenu child
    left join systemmenu parent on child.parent_id = parent.id
    where child.id = #{id}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, name, url, sn, parent_id
    from systemmenu
    where parent_id is not null
  </select>
  <select id="selectByRoleId" resultType="systemMenu">
    select s.id, s.name
    from systemmenu s join role_menu rm on s.id = rm.menu_id
    where rm.role_id = #{roleId}
  </select>
  <select id="selectMenuBySn" resultType="map">
    select child.id, child.parent_id pId, child.name, child.url action
    from systemmenu child left join systemmenu parent on child.parent_id = parent.id
    where parent.sn = #{menuSn}
  </select>
  <select id="queryForMenu" resultMap="BaseResultMap">
    select child.id, child.name, child.url, child.sn,
		parent.id p_id, parent.name p_name
    from systemmenu child
    left join systemmenu parent on child.parent_id = parent.id
    <choose>
      <when test="parentId == null">where child.parent_id is null</when>
      <otherwise>where child.parent_id = #{parentId}</otherwise>
    </choose>
  </select>
  <select id="selectMenuBySnAndUserId" resultType="map">
    select distinct child.id, child.parent_id pId, child.name, child.url action
    from systemmenu child
    left join systemmenu parent on child.parent_id = parent.id
    join role_menu rm on child.id = rm.menu_id
    join employee_role er on rm.role_id = er.role_id
    where er.employee_id = #{empId} and parent.sn = #{menuSn}
  </select>
</mapper>